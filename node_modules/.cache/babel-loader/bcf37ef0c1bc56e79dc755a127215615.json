{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yuri/Develop/youtube_react/src/components/main/Header.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Header = ({\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      isWhite: true,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 48px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: red;\n  z-index: 1000;\n`;\n_c2 = Container;\nconst Text = styled.p`\n  color: ${props => props.isWhite ? \"#fff\" : \"#000\"};\n`;\n_c3 = Text;\nexport default Header;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Text\");","map":{"version":3,"sources":["/Users/yuri/Develop/youtube_react/src/components/main/Header.tsx"],"names":["React","styled","Header","text","Container","div","Text","p","props","isWhite"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAMA,MAAMC,MAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5C,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,IAAf;AAAA,gBAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMD,M;AAQN,MAAME,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,S;AAaN,MAAME,IAAI,GAAGL,MAAM,CAACM,CAAO;AAC3B,WAAYC,KAAD,IAAiBA,KAAK,CAACC,OAAN,GAAgB,MAAhB,GAAyB,MAAQ;AAC7D,CAFA;MAAMH,I;AAIN,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  text: string;\n}\n\nconst Header: React.FC<Props> = ({ text }) => {\n  return (\n    <Container>\n      <Text isWhite={true}>{text}</Text>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 48px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: red;\n  z-index: 1000;\n`;\n\nconst Text = styled.p<any>`\n  color: ${(props: any) => (props.isWhite ? \"#fff\" : \"#000\")};\n`;\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}